./byfn.sh up -c mychannel -n

docker exec -it cli bash
 
peer chaincode install -n token_erc20 -v 1.0 -p github.com/chaincode/token-erc-20/go 

export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp
export CORE_PEER_ADDRESS=peer0.org2.example.com:9051
export CORE_PEER_LOCALMSPID="Org2MSP"
export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt
export CORE_PEER_TLS_ENABLED=true 

peer chaincode install -n token_erc20 -v 1.0 -p github.com/chaincode/token-erc-20/go 

export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
export CORE_PEER_ADDRESS=peer0.org1.example.com:7051
export CORE_PEER_LOCALMSPID="Org1MSP"
export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
export CORE_PEER_TLS_ENABLED=true 

peer chaincode instantiate -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n token_erc20 -v 1.0 -c '{"Args":["Init"]}' -P "AND ('Org1MSP.peer','Org2MSP.peer')"

export TARGET_TLS_OPTIONS=(-o orderer.example.com:7050 --tls --cafile "/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem" --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles "/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt" --peerAddresses peer0.org2.example.com:9051 --tlsRootCertFiles "/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt")



peer chaincode invoke -o orderer.example.com:7050 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n token_erc20 --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses peer0.org2.example.com:9051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '{"function":"PrintCreatorAddress", "Args":[]}'


// Gọi hàm
peer chaincode invoke "${TARGET_TLS_OPTIONS[@]}" -C mychannel -n token_erc20 -c '{"function":"Initialize","Args":["ExampleToken","ETK","100000","18"]}'
peer chaincode invoke "${TARGET_TLS_OPTIONS[@]}" -C mychannel -n token_erc20 -c '{"function":"Mint","Args":["5000"]}'
peer chaincode invoke "${TARGET_TLS_OPTIONS[@]}" -C mychannel -n token_erc20 -c '{"function":"ClientAccountBalance","Args":[]}'
peer chaincode invoke "${TARGET_TLS_OPTIONS[@]}" -C mychannel -n token_erc20 -c '{"function":"ClientAccountID","Args":[]}'
peer chaincode invoke "${TARGET_TLS_OPTIONS[@]}" -C mychannel -n token_erc20 -c '{"function":"balanceOf","Args":[""]}'
peer chaincode invoke "${TARGET_TLS_OPTIONS[@]}" -C mychannel -n token_erc20 -c '{"function":"name","Args":[]}'
peer chaincode invoke "${TARGET_TLS_OPTIONS[@]}" -C mychannel -n token_erc20 -c '{"function":"symbol","Args":[]}'
peer chaincode invoke "${TARGET_TLS_OPTIONS[@]}" -C mychannel -n token_erc20 -c '{"function":"totalSupply","Args":[]}'

Transfer","Args":[ "'"$RECIPIENT"'","100"]}'

- balanceOf là hàm yêu cầu lại số dư tài khoản của mint (totalSupply) trên tất cả các org và nó cần tham số truyền vào là account_ID_Org1_miner
- ClientAccountBalance là hàm yêu cầu số dư của người nhận hiện tại của org terminal đó
- transfer nó cần tham số truyền vào là  account_ID_org2
- transfer from (Chuyển khoản của bên thứ 3) là hoạt động trên terminal mới đại điện cho minter (mặc định org1) cần hai tham số truyền vào là  account_ID_Org1_miner và account ID Org2 


account ID Org1_miner =
eDUwOTo6Q049bWludGVyLE9VPWNsaWVudCxPPUh5cGVybGVkZ2VyLFNUPU5vcnRoIENhcm9saW5hLEM9VVM6OkNOPWNhLm9yZzEuZXhhbXBsZS5jb20sTz1vcmcxLmV4YW1wbGUuY29tLEw9RHVyaGFtLFNUPU5vcnRoIENhcm9saW5hLEM9VVM

// a 3rd terminal to represent the spender in Org1
account ID Org1_spender = eDUwOTo6Q049c3BlbmRlcixPVT1jbGllbnQsTz1IeXBlcmxlZGdlcixTVD1Ob3J0aCBDYXJvbGluYSxDPVVTOjpDTj1jYS5vcmcxLmV4YW1wbGUuY29tLE89b3JnMS5leGFtcGxlLmNvbSxMPUR1cmhhbSxTVD1Ob3J0aCBDYXJvbGluYSxDPVVT

account ID Org2 = eDUwOTo6Q049cmVjaXBpZW50LE9VPWNsaWVudCxPPUh5cGVybGVkZ2VyLFNUPU5vcnRoIENhcm9saW5hLEM9VVM6OkNOPWNhLm9yZzIuZXhhbXBsZS5jb20sTz1vcmcyLmV4YW1wbGUuY29tLEw9SHVyc2xleSxTVD1IYW1wc2hpcmUsQz1VSw


// encodedClientID := base64.StdEncoding.EncodeToString(clientID)
CgdPcmcxTVNQEqoGLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNLVENDQWMrZ0F3SUJBZ0lRWUUrNVloMGhwOW9jQlB3dEFrazZNakFLQmdncWhrak9QUVFEQWpCek1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVpNQmNHQTFVRUNoTVFiM0puTVM1bGVHRnRjR3hsTG1OdmJURWNNQm9HQTFVRUF4TVRZMkV1CmIzSm5NUzVsZUdGdGNHeGxMbU52YlRBZUZ3MHlOREExTWpRd056RTJNREJhRncwek5EQTFNakl3TnpFMk1EQmEKTUdzeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVApZVzRnUm5KaGJtTnBjMk52TVE0d0RBWURWUVFMRXdWaFpHMXBiakVmTUIwR0ExVUVBd3dXUVdSdGFXNUFiM0puCk1TNWxlR0Z0Y0d4bExtTnZiVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQ1J3T2R0dTMvUnYKQjN2OXhkYi9aVVl0SlZWeUcyNFBpZEJIa3Y5OGM2RDNWNEZYeFE2MVdSQnFxUWcyRkZ6MnhUTFVHY215cFpqTQplTkJ0ZnBiMmZaR2pUVEJMTUE0R0ExVWREd0VCL3dRRUF3SUhnREFNQmdOVkhSTUJBZjhFQWpBQU1Dc0dBMVVkCkl3UWtNQ0tBSUpiRHZ1ME1VazYySUpHSWtUd0ptNm9pQlN5RTJVOUExN0VZMkt0ODBEWjhNQW9HQ0NxR1NNNDkKQkFNQ0EwZ0FNRVVDSVFEdEhmeDVLWWUvVFV0YU4wWHhqMkdQNTlyWkRCc0tRZUViSEJpZFhoNlU1UUlnWmpxbApnRlgzWFNtSmhmNTlnbEFIeDMyQnB1ZVFKTU9pQmZCUmpuM1NpUWM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K

// addressHex := hex.EncodeToString([]byte(clientID))
0a074f7267314d535012aa062d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d4949434b44434341632b674177494241674951487154697745587a4c674e4768514b6c496b4346487a414b42676771686b6a4f50515144416a427a4d5173770a435159445651514745774a56557a45544d4245474131554543424d4b5132467361575a76636d3570595445574d4251474131554542784d4e5532467549455a790a5957356a61584e6a627a455a4d4263474131554543684d5162334a6e4d53356c654746746347786c4c6d4e76625445634d426f474131554541784d54593245750a62334a6e4d53356c654746746347786c4c6d4e7662544165467730794e4441314d6a51784d544d774d4442614677307a4e4441314d6a49784d544d774d4442610a4d477378437a414a42674e5642415954416c56544d524d77455159445651514945777044595778705a6d3979626d6c684d5259774641594456515148457731540a59573467526e4a68626d4e7063324e764d513477444159445651514c457756685a473170626a45664d4230474131554541777757515752746157354162334a6e0a4d53356c654746746347786c4c6d4e766254425a4d424d4742797147534d34394167454743437147534d343941774548413049414247526d634362564b3767460a7a2f6e4c6d5930454841636c44504f4a30667864335155466547483979576a6b5835334a684737546563526c527172774365594f482b486a30794577717868530a4c62544a6c7336623446576a5454424c4d41344741315564447745422f775145417749486744414d42674e5648524d4241663845416a41414d437347413155640a4977516b4d434b41494b6a654d4338766a6f7949667670474c6e394542616d4d575a6a4d66515657647952384a724444354a6c644d416f4743437147534d34390a42414d43413063414d455143494631436d6768734f34772f7354702f686c6153694c57513959312f68716d5646756a49522b34505152414a41694239375965300a334f4d687a4c3765346d2f584c39373964617848744b58484b4664444a65693677344e7270513d3d0a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a